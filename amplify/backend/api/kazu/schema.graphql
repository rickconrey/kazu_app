enum DeviceLockStatus {
  UNKNOWN
  UNLOCKED
  LOCKED
}

enum CartridgeState {
  UNKNOWN
  ATTACHED
  EJECTED
  ERROR
}

enum CartridgeStatus {
  UNKNOWN
  NORMAL
  EMPTY
  RECALLED
  EXPIRED
  ERROR
}

enum ProductId {
  UNKNOWN
  KAZU
  PERRIGO
}

enum CartridgeType {
  UNKNOWN
  VAPOR
  ORAL
}

type Device @model @auth(rules: [{allow: public}]) {
  id: ID!
  deviceId: String
  productId: ProductId
  firmwareVersion: Int
  imageLibraryVersion: Int
  lastCartridge: String
  cartridges: [ID]
  motorId: Int
  bleName: String
  lockStatus: DeviceLockStatus
  lastSynced: AWSTimestamp
  userId: ID
  dose: Int
  temperature: Int
  batteryLevel: Int
  bleId: String
}

type Cartridge @model @auth(rules: [{allow: public}]) {
  id: ID!
  cartridgeId: String
  type: CartridgeType
  productId: ProductId
  heaterId: Int
  totalResistance: Int
  coilResistance: Int
  contactResistance: Int
  measuredResistance: Int
  temperatureCoefficient: Int
  needleGauge: Int
  volume: Int
  fillerId: Int
  liquidId: Int
  maximumTemperature: Int
  minimumTemperatu: Int
  recommendedTemperature: Int
  customTemperature: Int
  filledTimestamp: AWSTimestamp
  expireTimestamp: AWSTimestamp
  logoKey: String
  logoAddress: Int
  logoLength: Int
  version: Int
  status: CartridgeStatus
  state: CartridgeState
  position: Int
  doseNumber: Int
  connectionTime: AWSTimestamp
  lastDevice: String
  devices: [ID]
  userId: ID
}

type CartridgeEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  time: AWSTimestamp
  deviceId: String
  userId: ID
  cartridgeId: String
  attached: Boolean
  position: Int
  doseNumber: Int
  measuredResistance: Int
  empty: Boolean
  json: AWSJSON
}

type ChargeEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  time: AWSTimestamp
  charging: Boolean
  adcVbat: Int
  json: AWSJSON
  userId: ID
  deviceId: String
}

type ResetEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  time: AWSTimestamp
  reason: String
  json: AWSJSON
  userId: ID
  deviceId: String
}

type PuffEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID
  time: AWSTimestamp
  json: AWSJSON
  cartridgeId: String
  deviceId: String
  duration: Int
  doseNumber: Int
  amount: Int
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String
  email: String
  avatarKey: String
  description: String
  dateCreated: AWSDateTime
}
 