type CartridgeEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  time: AWSTimestamp
  deviceId: String
  userId: ID
  cartridgeId: String
  attached: Boolean
  position: Int
  doseNumber: Int
  measuredResistance: Int
  empty: Boolean
  json: AWSJSON
}

type ChargeEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  time: AWSTimestamp
  charging: Boolean
  adcVbat: Int
  json: AWSJSON
  userId: ID
  deviceId: String
}

type ResetEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  time: AWSTimestamp
  reason: String
  json: AWSJSON
  userId: ID
  deviceId: String
}

type PuffEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID
  time: AWSTimestamp
  json: AWSJSON
  cartridgeId: String
  deviceId: String
  duration: Int
  doseNumber: Int
  amount: Int
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String
  email: String
  avatarKey: String
  description: String
  dateCreated: AWSDateTime
}
 